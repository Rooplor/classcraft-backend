name: deploy-qa Pipeline

on: workflow_dispatch

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v3

      - name: setup-java21
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: init mongodb
        run: docker compose up -d

      - name: install-dependency
        run: ./mvnw install

      - name: build
        run: ./mvnw package

      - name: ktlint
        run: ./mvnw ktlint:check

      - name: unit-test
        run:  ./mvnw test

      - name: upload-build-files
        uses: actions/upload-artifact@v3
        with:
          name: my-app-jar
          path: target/*.jar

  deploy-qa:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: checkout-code
        uses: actions/checkout@v3

      - name: dowload-build-files
        uses: actions/download-artifact@v3
        with:
          name: my-app-jar
          path: ./build

      - name: install-ssh-client
        run: sudo apt-get install -y openssh-client

      - name: install-openVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: connect-to-server
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/sitst-client.ovpn
          username: ${{ secrets.VPN_USERNAME }}
          password: ${{ secrets.VPN_PASSWORD }}

      - name: copy-build-files-to-server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p 22 $REMOTE_HOST >> ~/.ssh/known_hosts
          scp -P 22 -i ~/.ssh/id_ed25519 build/*.jar $REMOTE_USER@$REMOTE_HOST:/home/sysadmin/classCraftBackend

      - name: deploy-to-server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: |
          ssh -p 22 -i ~/.ssh/id_ed25519 $REMOTE_USER@$REMOTE_HOST << 'EOF'
            cd /home/sysadmin/classCraftBackend/QA
          
            docker stop classCraftBackendQA || true
            docker rm classCraftBackendQA || true
            docker build -t classcraftbackendQAimg:latest .
            docker run -d --name classCraftBackendQA -p 8081:8080 classcraftbackendQAimg:latest
          EOF