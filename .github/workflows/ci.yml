name: CI Pipeline

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-code
        uses: actions/checkout@v3

      - name: setup-jave22
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '22'

      - name: install-dependency
        run: ./mvnw install

      - name: build
        run: ./mvnw package

      - name: ktlint
        run: ./mvnw ktlint:check

      - name: unit-test
        run: ./mvnw test

      # - name: upload-build-files
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-app-jar
      #     path: target/*.jar

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-test

  #   steps:
  #     - name: checkout-code
  #       uses: actions/checkout@v3

  #     - name: dowload-build-files
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: my-app-jar
  #         path: ./build

  #     - name: install-ssh-client
  #       run: sudo apt-get install -y openssh-client

  #     - name: install-openVPN
  #       run: |
  #         sudo apt update
  #         sudo apt install -y openvpn openvpn-systemd-resolved

  #     - name: connect-to-server
  #       uses: "kota65535/github-openvpn-connect-action@v2"
  #       with:
  #         config_file: .github/workflows/sitst-client.ovpn
  #         username: ${{ secrets.VPN_USERNAME }}
  #         password: ${{ secrets.VPN_PASSWORD }}

  #     - name: copy-build-files-to-server
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  #         REMOTE_USER: ${{ secrets.REMOTE_USER }}
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan -p 22 $REMOTE_HOST >> ~/.ssh/known_hosts
  #         scp -P 22 -i ~/.ssh/id_rsa build/*.jar $REMOTE_USER@$REMOTE_HOST:/home/sysadmin/classCraftBackend

  #     - name: deploy-to-server
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  #         REMOTE_USER: ${{ secrets.REMOTE_USER }}
  #       run: |
  #         ssh -p 22 -i ~/.ssh/id_rsa $REMOTE_USER@$REMOTE_HOST << 'EOF'
  #           cd /home/sysadmin/classCraftBackend
          
  #           docker stop classCraftBackend || true
  #           docker rm classCraftBackend || true
  #           docker build -t classcraftbackendimg:latest .
  #           docker run -d --name classCraftBackend -p 8080:8080 classcraftbackendimg:latest
  #         EOF
